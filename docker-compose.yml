version: '3.8'

services:
  task-service:
    image: wmezz/task-service:v4
    ports:
      - "5000:5000"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - taskmanagernetwork

  frontend:
    image: wmezz/frontend:v2
    ports:
      - "8080:80"
    networks:
      - taskmanagernetwork
      
  notification-service:
    image: wmezz/notification-service:v1
    ports:
      - "6000:6000"
    networks:
      - taskmanagernetwork

  rabbitmq:
    image: "rabbitmq"
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - taskmanagernetwork

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - taskmanagernetwork
  
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - taskmanagernetwork

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - taskmanagernetwork
    
  logstash:
    image: docker.elastic.co/logstash/logstash:7.9.3
    ports:
      - "5001:5000"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./tasks.csv:/usr/share/logstash/tasks.csv
    depends_on:
      - elasticsearch
    networks:
      - taskmanagernetwork

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.3
    ports:
        - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - taskmanagernetwork

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.9.3
    user: root
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - ./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
    command: ["-system.hostfs=/hostfs"]
    depends_on:
      - elasticsearch
    networks:
      - taskmanagernetwork
  
  test-runner:
    image: debian
    depends_on:
      task-service:
        condition: service_started
      frontend:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      logstash:
        condition: service_started
      kibana:
        condition: service_started
      metricbeat:
        condition: service_started
    volumes:
      - ./scripts:/scripts
    command: >
      /bin/bash -c "
      apt-get update &&
      apt-get install -y curl netcat-openbsd &&
      sleep 30;
      /scripts/check_elk.sh
      "
    networks:
      - taskmanagernetwork
    
  curator:
    image: bobrik/curator:5.8.1
    volumes:
      - ./actions.yml:/actions.yml
    command: ["curator", "/actions.yml"]
    depends_on:
      - elasticsearch
  
networks:
  taskmanagernetwork:
